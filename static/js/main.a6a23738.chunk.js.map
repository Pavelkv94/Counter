{"version":3,"sources":["components/common/Button.tsx","components/Counter/Counter.tsx","components/HeadTitle/HeadTitle.tsx","components/common/SpanSetting.tsx","components/Setting/Setting.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","className","class","onClick","disabled","to","title","style","width","height","Counter","reset","state","startValue","disabledOne","displayValue","maxValue","disabledTwo","console","log","addInc","HeadTitle","id","baseFrequency","numOctaves","seed","attributeName","dur","values","repeatCount","in","scale","SpanSetting","type","value","onChange","e","initValue","JSON","parse","currentTarget","changeValue","max","min","Setting","changeValueMax","changeValueStart","App","useState","isDisabled","setState","newValue","incValue","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6a23738.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype ButtonType = {\r\n    title: string\r\n    disabled: boolean\r\n    onClick: () => void\r\n    class: string\r\n\r\n}\r\n\r\nexport function Button(props: ButtonType) {\r\n\r\n    return (\r\n        <button\r\n            className={props.class}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        > <NavLink to={props.title === \"set\" ? \"/setting\" : \"/counter\"}>\r\n                <div style={{ width: '25 %', height: '50px' }}>{props.title}</div>\r\n            </NavLink>\r\n\r\n        </button>\r\n    )\r\n}","import { start } from 'node:repl';\r\nimport React from 'react';\r\nimport '../../App.css';\r\nimport { Button } from '../common/Button';\r\nimport { StateType } from '../../App'\r\n\r\ntype CounerType = {\r\n    state: StateType\r\n    addInc: (value: number) => void\r\n    reset: (value: number) => void\r\n}\r\n\r\nexport function Counter(props: CounerType) {\r\n\r\n    let addIncrement = () => props.addInc(props.state.displayValue)\r\n    let reset = () => props.reset(props.state.startValue)\r\n    let disabledOne = props.state.displayValue < props.state.maxValue ? false : true\r\n    let disabledTwo = props.state.displayValue === props.state.startValue ? true : false\r\n    console.log(props.state.displayValue)\r\n    console.log(props.state.startValue)\r\n    console.log(disabledTwo)\r\n    return (\r\n        <div className=\"countContainer\">\r\n            <div className={`display ${props.state.displayValue === props.state.maxValue ? \"limit\" : \"\"}`}>\r\n                {props.state.displayValue}\r\n            </div>\r\n            <div className=\"controlContainer\">\r\n                <Button title={\"incr\"} disabled={disabledOne} onClick={addIncrement} class={`btn ${props.state.displayValue === props.state.maxValue ? \"disable\" : \"\"}`} />\r\n                <Button title={\"reset\"} disabled={disabledTwo} onClick={reset} class={`btn ${props.state.displayValue === props.state.startValue ? \"disable\" : \"\"}`} />\r\n                <Button title={\"set\"} disabled={true} onClick={reset} class={'btn'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './HeadTitle.css';\r\n\r\nexport function HeadTitle(props: any) {\r\n    return (<>\r\n<div className=\"headTitle\"><h2>COUNTER</h2></div>\r\n        <svg>\r\n          <filter id=\"fire\">\r\n            <feTurbulence id=\"turbulance\" baseFrequency=\"0.1 0.1\" numOctaves=\"2\" seed=\"0\">\r\n              <animate attributeName=\"baseFrequency\" dur='8s' values=\"0.1 0.1;0.12 0.12\" repeatCount=\"indefinite\"></animate>\r\n            </feTurbulence>\r\n            <feDisplacementMap in=\"SourceGraphic\" scale=\"8\"></feDisplacementMap>\r\n          </filter>\r\n        </svg>\r\n    </>)\r\n}","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport '../../App.css';\r\n\r\ntype SpanSettingType = {\r\n    title: string\r\n    value: number\r\n    changeValue: (initValue: number) => void\r\n}\r\n\r\nexport function SpanSetting(props: SpanSettingType) {\r\n\r\n\r\n    const onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let initValue = JSON.parse(e.currentTarget.value)\r\n        props.changeValue(initValue)\r\n    }\r\n    return (\r\n        <span className=\"span\">\r\n            <div>{props.title}</div>\r\n            <input type=\"number\" className=\"input\" value={props.value} onChange={onChangeInput} max=\"99\" min=\"-99\"/>\r\n        </span>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { StateType } from '../../App';\r\nimport '../../App.css';\r\nimport { Button } from '../common/Button';\r\nimport { SpanSetting } from '../common/SpanSetting';\r\n\r\ntype SettingType = {\r\n    state: StateType\r\n    changeValueMax: (initValue: number) => void\r\n    changeValueStart: (initValue: number) => void\r\n}\r\n\r\nexport function Setting(props: SettingType) {\r\n    return (\r\n        <div className=\"countContainer\" >\r\n            <div className=\"setDisplay\">\r\n                <SpanSetting title={\"Max value:\"} value={props.state.maxValue} changeValue={props.changeValueMax} />\r\n                <SpanSetting title={\"Start value:\"} value={props.state.startValue}  changeValue={props.changeValueStart} />\r\n            </div>\r\n            <div className=\"controlContainer\">\r\n                <Button title={(\"Count\")} disabled={true} onClick={() => { }} class={`btn`} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport { Counter } from './components/Counter/Counter';\nimport { HeadTitle } from './components/HeadTitle/HeadTitle';\nimport { Setting } from './components/Setting/Setting';\n\nexport type StateType = {\n  displayValue: number\n  maxValue: number\n  startValue: number\n  isDisabled: boolean\n}\nfunction App() {\n  let [state, setState] = useState<StateType>({\n    displayValue: 0,\n    maxValue: 0,\n    startValue: 0,\n    isDisabled: true,\n  })\n  //let [value, setValue] = useState<number>(startValue);\n  //if (maxValue < startValue) { value = NaN }\n  function addInc(value: number) {\n    let newValue = value + 1;\n    setState({ ...state, displayValue: newValue })\n  }\n  function reset(value: number) {\n    setState({ ...state, displayValue: value })\n  }\n  function changeValueMax(incValue: number) {\n    setState({ ...state, maxValue: incValue })\n  }\n  function changeValueStart(incValue: number) {\n    setState({ ...state, startValue: incValue })\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"App\" >\n        <HeadTitle />\n        <Route render={() => <Counter state={state} addInc={addInc} reset={reset} />} path=\"/counter\" />\n        <Route render={() => <Setting state={state} changeValueMax={changeValueMax} changeValueStart={changeValueStart}/>} path=\"/setting\" />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}