{"version":3,"sources":["Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Counter","props","disabledOne","value","disabledTwo","className","onClick","addInc","disabled","reset","App","useState","setValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMASO,SAASA,EAAQC,GAExB,IAEIC,IAAaD,EAAME,MAAQ,GAC3BC,EAA8B,IAAhBH,EAAME,MAEpB,OACI,sBAAKE,UAAU,iBAAf,UACI,qBAAKA,UAAS,kBAA2B,IAAdJ,EAAME,MAAW,QAAU,IAAtD,SACKF,EAAME,QAEX,gCACI,wBACIE,UAAS,cAAuB,IAAdJ,EAAME,MAAW,UAAU,IAC7CG,QAbD,kBAAML,EAAMM,OAAON,EAAME,QAcxBK,SAAUN,EAHd,kBAMA,wBACIG,UAAS,cAAuB,IAAdJ,EAAME,MAAW,UAAU,IAC7CG,QAlBR,kBAAML,EAAMQ,MAAM,IAmBVD,SAAUJ,EAHd,yBCFDM,MAtBf,WAAgB,IAAD,EACWC,mBAAiB,GAD5B,mBACRR,EADQ,KACDS,EADC,KAWb,OACE,qBAAKP,UAAU,MAAf,SACE,cAACL,EAAD,CACEG,MAAOA,EACPI,OAZN,SAAgBJ,GAEdS,EADeT,EAAQ,IAYnBM,MATN,SAAeN,GACbS,EAAST,SCEEU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.81f3480c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\ntype CounerType = {\r\n    value: number\r\n    addInc: (value: number) => void\r\n    reset: (value: number) => void\r\n}\r\n\r\nexport function Counter(props: CounerType) {\r\n\r\nlet addIncrement = () => props.addInc(props.value)\r\nlet reset = () => props.reset(0)\r\nlet disabledOne =props.value < 5 ? false : true\r\nlet disabledTwo = props.value === 0 ? true : false\r\n\r\n    return (\r\n        <div className=\"countContainer\">\r\n            <div className={`display ${props.value===5? \"limit\" : \"\"}`}>\r\n                {props.value}\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className={`btn ${props.value===5? \"disable\":\"\"}`}\r\n                    onClick={addIncrement}\r\n                    disabled={disabledOne}\r\n                >incr\r\n            </button>\r\n                <button\r\n                    className={`btn ${props.value===0? \"disable\":\"\"}`}\r\n                    onClick={reset}\r\n                    disabled={disabledTwo}\r\n                >reset\r\n            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { Counter } from './Counter';\n\nfunction App() {\n  let [value, setValue] = useState<number>(0)\n\n  function addInc(value: number) {\n    let newValue = value + 1;\n    setValue(newValue)\n  }\n  function reset(value: number) {\n    setValue(value)\n  }\n\n  return (\n    <div className=\"App\" >\n      <Counter\n        value={value}\n        addInc={addInc}\n        reset={reset}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}